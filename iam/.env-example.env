# .env
GOOGLE_CLIENT_ID=MY-APP-ID.apps.googleusercontent.com
GOOGLE_CLIENT_SECRET=MY_APP_SECRET
GOOGLE_CALLBACK=http://localhost:3000/

GENERIC_CALLBACK_URL=http://localhost:3000/

TWITTER_CLIENT_ID=MY-APP-ID-TWITTER
TWITTER_CLIENT_SECRET=MY_APP_SECRET
TWITTER_CALLBACK=http://127.0.0.1:3000/
BRIGHTID_PRIVATE_KEY=BRIGHTID_PRIVATE_KEY
GITHUB_CLIENT_ID=MY_GITHUB_CLIENT_ID
GITHUB_CLIENT_SECRET=MY_GITHUB_CLIENT_SECRET
GRANT_HUB_GITHUB_CLIENT_ID=MY_GRANT_HUB_GITHUB_CLIENT_ID
GRANT_HUB_GITHUB_CLIENT_SECRET=MY_GRANT_HUB_GITHUB_CLIENT_SECRET
GRANT_HUB_MACI_GITHUB_CLIENT_ID=MY_GRANT_HUB_GITHUB_CLIENT_ID
GRANT_HUB_MACI_GITHUB_CLIENT_SECRET=MY_GRANT_HUB_GITHUB_CLIENT_SECRET
LINKEDIN_CLIENT_ID=MY_LINKEDIN_CLIENT_ID
LINKEDIN_CLIENT_SECRET=MY_LINKEDIN_CLIENT_SECRET
LINKEDIN_CLIENT_ID_V2=MY_LINKEDIN_CLIENT_ID_V2
LINKEDIN_CLIENT_SECRET_V2=MY_LINKEDIN_CLIENT_SECRET_V2
LINKEDIN_CALLBACK=http://localhost:3000/
DISCORD_CLIENT_ID=MY_APP_CLIENT_ID
DISCORD_CLIENT_SECRET=MY_APP_CLIENT_SECRET
DISCORD_CALLBACK=MY_APP_CALLBACK
COINBASE_CLIENT_ID=MY_COINBASE_CLIENT_ID
COINBASE_CLIENT_SECRET=MY_COINBASE_CLIENT_SECRET
COINBASE_CALLBACK=http://localhost:3000/
TRUSTA_LABS_ACCESS_TOKEN=trusta_labs_access_token
OUTDID_API_KEY=<api key>
OUTDID_API_SECRET=<secret>

CURRENT_ENV=development
EXIT_ON_UNHANDLED_ERROR=true

# For server to use a consistent public key, provide a valid Ed25519 key here:
# IAM_JWK='{"kty":"OKP","crv":"Ed25519","x":"yourIamKeyValues","d":"yourIamKeyValues"}'
IAM_JWK='{"kty":"OKP","crv":"Ed25519","x":"a7wbszn1DfZ3I7-_zDkUXCgypcGxL_cpCSTYEPRYj_o","d":"Z0hucmxRt1C22ygAXJ1arXwD9QlAA5tEPLb7qoXYDGY"}'

IAM_PORT=8003

RPC_URL=https://eth-mainnet.alchemyapi.io/v2/<API_KEY>
ALCHEMY_API_KEY=<API_KEY>
MORALIS_API_KEY=<API_KEY>

AMI_API_TOKEN='SECRET_GITCOIN_AMI_API_TOKEN'

GTC_STAKING_ROUNDS='[{"id": 4, "start": 1693526400, "duration": 7592340}, {"id": 5, "start": 1701118741, "duration": 8157658}]'


ATTESTATION_SIGNER_PRIVATE_KEY=0x0000000000000000000000000000000000000000000000000000000000000001
TESTNET_ATTESTATION_SIGNER_PRIVATE_KEY=0x0000000000000000000000000000000000000000000000000000000000000001
# Needs to match FE/APP equivalents in app/.env
ALLO_SCORER_ID=3
SCORER_ENDPOINT=http://localhost:8002/
SCORER_API_KEY=abc  # This is a static authentication secret token
EAS_FEE_USD=2

EAS_GITCOIN_STAMP_SCHEMA=0xd83994d5459162a259c3a18d3db267ca05982f1e1e261d5388a8bfe2a2a2c7f9

PASSPORT_STAMP_METADATA_PATH=http://localhost:3000/stampMetadata.json

# Use this environment variable to enable/disable testnets on on-chain-based stamp evaluation.
INCLUDE_TESTNETS=false
ZKSYNC_ERA_MAINNET_ENDPOINT=zksync_mainnet_endpoint


DATA_SCIENCE_API_URL=http://localhost:8001/predict

IAM_JWK_EIP712='{"kty":"EC","crv":"secp256k1","x":"PdB2nS-knyAxc6KPuxBr65vRpW-duAXwpeXlwGJ03eU","y":"MwoGZ08hF5uv-_UEC9BKsYdJVSbJNHcFhR1BZWer5RQ","d":"z9VrSNNZXf9ywUx3v_8cLDhSw8-pvAT9qu_WZmqqfWM"}'

REDIS_URL=redis://localhost:6379

# Used by the 'src/scripts/checkOnChainProvidersAreInSync.ts' script
ALCHEMY_API_KEY=...

# See the equivalent value configured in app sample
SCROLL_BADGE_PROVIDER_INFO='{"badge_provider":{"contractAddress":"0x...","level":1}}'
SCROLL_BADGE_ATTESTATION_SCHEMA_UID=0xd57de4f41c3d3cc855eadef68f98c0d4edd22d57161d96b7c06d2f4336cc3b49

FF_ROTATING_KEYS=on

# Control the % of stamps that we want to attach a human network hash. This shall be a number between 0 and 100.
# HUMAN_NETWORK_NULLIFIER_PERCENT=
