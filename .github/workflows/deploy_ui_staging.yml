name: Deploy UI to Staging

on:
  workflow_dispatch:
    inputs:
      commit:
        description: "Leave blank to use current HEAD, or provide an override commit SHA"
        type: string
        required: false

jobs:
  ref:
    name: Load Commit Ref
    runs-on: ubuntu-latest
    steps:
      - id: ref
        uses: passportxyz/gh-workflows/.github/actions/load_commit_ref@v1
        with:
          commit: ${{ inputs.commit }}

    outputs:
      version_tag: ${{ steps.ref.outputs.version_tag }}
      docker_tag: ${{ steps.ref.outputs.docker_tag }}
      refspec: ${{ steps.ref.outputs.refspec }}

  run-tests:
    runs-on: ubuntu-latest
    # Run a local ceramic nod to test against
    services:
      ceramic:
        image: gitcoinpassport/js-ceramic:3.2.0
        ports:
          - 7007:7007

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: 20.9.0
          cache: "yarn"
      - name: Install Packages
        run: yarn install --frozen-lockfile
      - name: Run Tests
        run: yarn test
      # - name: Run Linter
      #   run: yarn lint
      - name: Workarround for build error
        run: rm -rf node_modules/@tendermint
      - name: Run Build (ensure that build succeeds)
        run: yarn build
      - name: Load Secrets
        id: op-load-secret
        uses: 1password/load-secrets-action@v1
        with:
          export-env: true
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
          CERAMIC_PRIVATE_KEY: op://DevOps/passport-xyz-staging-secrets/ci/CERAMIC_PRIVATE_KEY
      - name: Deploy Ceramic Models
        working-directory: ./schemas
        run: yarn models:deploy-composite
        env:
          CERAMIC_URL: http://localhost:7007
          PRIVATE_KEY: ${{env.CERAMIC_PRIVATE_KEY}}
      - name: Run Ceramic Integration Tests
        run: yarn test:ceramic-integration
        env:
          CERAMIC_CLIENT_URL: http://localhost:7007
          IAM_JWK: '{"kty":"OKP","crv":"Ed25519","x":"a7wbszn1DfZ3I7-_zDkUXCgypcGxL_cpCSTYEPRYj_o","d":"Z0hucmxRt1C22ygAXJ1arXwD9QlAA5tEPLb7qoXYDGY"}'
          IAM_JWK_EIP712: '{"kty":"EC","crv":"secp256k1","x":"PdB2nS-knyAxc6KPuxBr65vRpW-duAXwpeXlwGJ03eU","y":"MwoGZ08hF5uv-_UEC9BKsYdJVSbJNHcFhR1BZWer5RQ","d":"z9VrSNNZXf9ywUx3v_8cLDhSw8-pvAT9qu_WZmqqfWM"}'

  deploy-ui:
    name: Deploy UI to Staging - Push to Branch
    runs-on: ubuntu-latest
    needs: [ref, run-tests]
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ needs.ref.outputs.refspec }}
          fetch-depth: 0
      - name: Push code to branch
        uses: passportxyz/gh-workflows/.github/actions/push_to_branch@v1
        with:
          commit: ${{ needs.ref.outputs.refspec }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          branch: staging-app
