{
  "0x14a33": [
    "error AccessDenied()",
    "error InsufficientValue()",
    "error InvalidAttester()",
    "error InvalidEAS()",
    "error NotAllowlisted()",
    "error NotPayable()",
    "event AdminChanged(address previousAdmin, address newAdmin)",
    "event BeaconUpgraded(address indexed beacon)",
    "event Initialized(uint8 version)",
    "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
    "event Paused(address account)",
    "event Unpaused(address account)",
    "event Upgraded(address indexed implementation)",
    "function _eas() view returns (address)",
    "function _gitcoinAttester() view returns (address)",
    "function addToAllowlist(address addr)",
    "function allowlist(address) view returns (bool)",
    "function attest(tuple(bytes32 uid, bytes32 schema, uint64 time, uint64 expirationTime, uint64 revocationTime, bytes32 refUID, address recipient, address attester, bool revocable, bytes data) attestation) payable returns (bool)",
    "function getCachedScore(address user) view returns (tuple(uint32 score, uint64 time, uint64 expirationTime))",
    "function getUserAttestation(address user, bytes32 schema) view returns (bytes32)",
    "function initialize(address eas, address gitcoinAttester)",
    "function isPayable() pure returns (bool)",
    "function multiAttest(tuple(bytes32 uid, bytes32 schema, uint64 time, uint64 expirationTime, uint64 revocationTime, bytes32 refUID, address recipient, address attester, bool revocable, bytes data)[] attestations, uint256[]) payable returns (bool)",
    "function multiRevoke(tuple(bytes32 uid, bytes32 schema, uint64 time, uint64 expirationTime, uint64 revocationTime, bytes32 refUID, address recipient, address attester, bool revocable, bytes data)[] attestations, uint256[]) payable returns (bool)",
    "function owner() view returns (address)",
    "function pause()",
    "function paused() view returns (bool)",
    "function proxiableUUID() view returns (bytes32)",
    "function removeFromAllowlist(address addr)",
    "function renounceOwnership()",
    "function revoke(tuple(bytes32 uid, bytes32 schema, uint64 time, uint64 expirationTime, uint64 revocationTime, bytes32 refUID, address recipient, address attester, bool revocable, bytes data) attestation) payable returns (bool)",
    "function setScoreSchema(bytes32 _schema)",
    "function transferOwnership(address newOwner)",
    "function unpause()",
    "function upgradeTo(address newImplementation)",
    "function upgradeToAndCall(address newImplementation, bytes data) payable",
    "function userAttestations(address, bytes32) view returns (bytes32)"
  ],
  "0xa": [
    "error AccessDenied()",
    "error InsufficientValue()",
    "error InvalidAttester()",
    "error InvalidEAS()",
    "error NotAllowlisted()",
    "error NotPayable()",
    "event AdminChanged(address previousAdmin, address newAdmin)",
    "event BeaconUpgraded(address indexed beacon)",
    "event Initialized(uint8 version)",
    "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
    "event Paused(address account)",
    "event ScoreSchemaSet(bytes32 schema)",
    "event Unpaused(address account)",
    "event Upgraded(address indexed implementation)",
    "function _eas() view returns (address)",
    "function _gitcoinAttester() view returns (address)",
    "function addToAllowlist(address addr)",
    "function allowlist(address) view returns (bool)",
    "function attest((bytes32 uid, bytes32 schema, uint64 time, uint64 expirationTime, uint64 revocationTime, bytes32 refUID, address recipient, address attester, bool revocable, bytes data) attestation) payable returns (bool)",
    "function communityScoreAttestations(uint32, address) view returns (bytes32)",
    "function communityScores(uint32, address) view returns (uint32 score, uint64 time, uint64 expirationTime)",
    "function defaultCommunityId() view returns (uint32)",
    "function getCachedScore(address user) view returns ((uint32 score, uint64 time, uint64 expirationTime))",
    "function getCachedScore(uint32 communityId, address user) view returns ((uint32 score, uint64 time, uint64 expirationTime))",
    "function getUserAttestation(address user, bytes32 schema) view returns (bytes32)",
    "function initialize(address eas, address gitcoinAttester)",
    "function isPayable() pure returns (bool)",
    "function multiAttest((bytes32 uid, bytes32 schema, uint64 time, uint64 expirationTime, uint64 revocationTime, bytes32 refUID, address recipient, address attester, bool revocable, bytes data)[] attestations, uint256[]) payable returns (bool)",
    "function multiRevoke((bytes32 uid, bytes32 schema, uint64 time, uint64 expirationTime, uint64 revocationTime, bytes32 refUID, address recipient, address attester, bool revocable, bytes data)[] attestations, uint256[]) payable returns (bool)",
    "function owner() view returns (address)",
    "function pause()",
    "function paused() view returns (bool)",
    "function proxiableUUID() view returns (bytes32)",
    "function removeFromAllowlist(address addr)",
    "function renounceOwnership()",
    "function revoke((bytes32 uid, bytes32 schema, uint64 time, uint64 expirationTime, uint64 revocationTime, bytes32 refUID, address recipient, address attester, bool revocable, bytes data) attestation) payable returns (bool)",
    "function scoreSchema() view returns (bytes32)",
    "function scoreV2Schema() view returns (bytes32)",
    "function scores(address) view returns (uint32 score, uint64 time, uint64 expirationTime)",
    "function setDefaultCommunityId(uint32 communityId)",
    "function setScoreSchema(bytes32 _schema)",
    "function setScoreV2Schema(bytes32 _schema)",
    "function transferOwnership(address newOwner)",
    "function unpause()",
    "function upgradeTo(address newImplementation)",
    "function upgradeToAndCall(address newImplementation, bytes data) payable",
    "function userAttestations(address, bytes32) view returns (bytes32)"
  ],
  "0xe704": [
    "error AccessDenied()",
    "error InsufficientValue()",
    "error InvalidAttester()",
    "error InvalidEAS()",
    "error NotAllowlisted()",
    "error NotPayable()",
    "event AdminChanged(address previousAdmin, address newAdmin)",
    "event BeaconUpgraded(address indexed beacon)",
    "event Initialized(uint8 version)",
    "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
    "event Paused(address account)",
    "event Unpaused(address account)",
    "event Upgraded(address indexed implementation)",
    "function _eas() view returns (address)",
    "function _gitcoinAttester() view returns (address)",
    "function addToAllowlist(address addr)",
    "function allowlist(address) view returns (bool)",
    "function attest(tuple(bytes32 uid, bytes32 schema, uint64 time, uint64 expirationTime, uint64 revocationTime, bytes32 refUID, address recipient, address attester, bool revocable, bytes data) attestation) payable returns (bool)",
    "function getUserAttestation(address user, bytes32 schema) view returns (bytes32)",
    "function initialize(address eas, address gitcoinAttester)",
    "function isPayable() pure returns (bool)",
    "function multiAttest(tuple(bytes32 uid, bytes32 schema, uint64 time, uint64 expirationTime, uint64 revocationTime, bytes32 refUID, address recipient, address attester, bool revocable, bytes data)[] attestations, uint256[]) payable returns (bool)",
    "function multiRevoke(tuple(bytes32 uid, bytes32 schema, uint64 time, uint64 expirationTime, uint64 revocationTime, bytes32 refUID, address recipient, address attester, bool revocable, bytes data)[] attestations, uint256[]) payable returns (bool)",
    "function owner() view returns (address)",
    "function pause()",
    "function paused() view returns (bool)",
    "function proxiableUUID() view returns (bytes32)",
    "function removeFromAllowlist(address addr)",
    "function renounceOwnership()",
    "function revoke(tuple(bytes32 uid, bytes32 schema, uint64 time, uint64 expirationTime, uint64 revocationTime, bytes32 refUID, address recipient, address attester, bool revocable, bytes data) attestation) payable returns (bool)",
    "function transferOwnership(address newOwner)",
    "function unpause()",
    "function upgradeTo(address newImplementation)",
    "function upgradeToAndCall(address newImplementation, bytes data) payable",
    "function userAttestations(address, bytes32) view returns (bytes32)"
  ],
  "0x7a69": [
    "error AccessDenied()",
    "error InsufficientValue()",
    "error InvalidEAS()",
    "error NotPayable()",
    "event AdminChanged(address previousAdmin, address newAdmin)",
    "event BeaconUpgraded(address indexed beacon)",
    "event Initialized(uint8 version)",
    "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
    "event Paused(address account)",
    "event Unpaused(address account)",
    "event Upgraded(address indexed implementation)",
    "function _eas() view returns (address)",
    "function _gitcoinAttester() view returns (address)",
    "function addToAllowlist(address addr)",
    "function allowlist(address) view returns (bool)",
    "function attest(tuple(bytes32 uid, bytes32 schema, uint64 time, uint64 expirationTime, uint64 revocationTime, bytes32 refUID, address recipient, address attester, bool revocable, bytes data) attestation) payable returns (bool)",
    "function getUserAttestation(address user, bytes32 schema) view returns (bytes32)",
    "function initialize(address eas, address gitcoinAttester)",
    "function isPayable() pure returns (bool)",
    "function multiAttest(tuple(bytes32 uid, bytes32 schema, uint64 time, uint64 expirationTime, uint64 revocationTime, bytes32 refUID, address recipient, address attester, bool revocable, bytes data)[] attestations, uint256[]) payable returns (bool)",
    "function multiRevoke(tuple(bytes32 uid, bytes32 schema, uint64 time, uint64 expirationTime, uint64 revocationTime, bytes32 refUID, address recipient, address attester, bool revocable, bytes data)[] attestations, uint256[]) payable returns (bool)",
    "function owner() view returns (address)",
    "function pause()",
    "function paused() view returns (bool)",
    "function proxiableUUID() view returns (bytes32)",
    "function removeFromAllowlist(address addr)",
    "function renounceOwnership()",
    "function revoke(tuple(bytes32 uid, bytes32 schema, uint64 time, uint64 expirationTime, uint64 revocationTime, bytes32 refUID, address recipient, address attester, bool revocable, bytes data) attestation) payable returns (bool)",
    "function transferOwnership(address newOwner)",
    "function unpause()",
    "function upgradeTo(address newImplementation)",
    "function upgradeToAndCall(address newImplementation, bytes data) payable",
    "function userAttestations(address, bytes32) view returns (bytes32)"
  ],
  "0xe708": [
    "error AccessDenied()",
    "error InsufficientValue()",
    "error InvalidAttester()",
    "error InvalidEAS()",
    "error NotAllowlisted()",
    "error NotPayable()",
    "event AdminChanged(address previousAdmin, address newAdmin)",
    "event BeaconUpgraded(address indexed beacon)",
    "event Initialized(uint8 version)",
    "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
    "event Paused(address account)",
    "event ScoreSchemaSet(bytes32 schema)",
    "event Unpaused(address account)",
    "event Upgraded(address indexed implementation)",
    "function _eas() view returns (address)",
    "function _gitcoinAttester() view returns (address)",
    "function addToAllowlist(address addr)",
    "function allowlist(address) view returns (bool)",
    "function attest((bytes32 uid, bytes32 schema, uint64 time, uint64 expirationTime, uint64 revocationTime, bytes32 refUID, address recipient, address attester, bool revocable, bytes data) attestation) payable returns (bool)",
    "function communityScoreAttestations(uint32, address) view returns (bytes32)",
    "function communityScores(uint32, address) view returns (uint32 score, uint64 time, uint64 expirationTime)",
    "function defaultCommunityId() view returns (uint32)",
    "function getCachedScore(address user) view returns ((uint32 score, uint64 time, uint64 expirationTime))",
    "function getCachedScore(uint32 communityId, address user) view returns ((uint32 score, uint64 time, uint64 expirationTime))",
    "function getUserAttestation(address user, bytes32 schema) view returns (bytes32)",
    "function initialize(address eas, address gitcoinAttester)",
    "function isPayable() pure returns (bool)",
    "function multiAttest((bytes32 uid, bytes32 schema, uint64 time, uint64 expirationTime, uint64 revocationTime, bytes32 refUID, address recipient, address attester, bool revocable, bytes data)[] attestations, uint256[]) payable returns (bool)",
    "function multiRevoke((bytes32 uid, bytes32 schema, uint64 time, uint64 expirationTime, uint64 revocationTime, bytes32 refUID, address recipient, address attester, bool revocable, bytes data)[] attestations, uint256[]) payable returns (bool)",
    "function owner() view returns (address)",
    "function pause()",
    "function paused() view returns (bool)",
    "function proxiableUUID() view returns (bytes32)",
    "function removeFromAllowlist(address addr)",
    "function renounceOwnership()",
    "function revoke((bytes32 uid, bytes32 schema, uint64 time, uint64 expirationTime, uint64 revocationTime, bytes32 refUID, address recipient, address attester, bool revocable, bytes data) attestation) payable returns (bool)",
    "function scoreSchema() view returns (bytes32)",
    "function scoreV2Schema() view returns (bytes32)",
    "function scores(address) view returns (uint32 score, uint64 time, uint64 expirationTime)",
    "function setDefaultCommunityId(uint32 communityId)",
    "function setScoreSchema(bytes32 _schema)",
    "function setScoreV2Schema(bytes32 _schema)",
    "function transferOwnership(address newOwner)",
    "function unpause()",
    "function upgradeTo(address newImplementation)",
    "function upgradeToAndCall(address newImplementation, bytes data) payable",
    "function userAttestations(address, bytes32) view returns (bytes32)"
  ],
  "0x1a4": [
    "error AccessDenied()",
    "error InsufficientValue()",
    "error InvalidAttester()",
    "error InvalidEAS()",
    "error NotAllowlisted()",
    "error NotPayable()",
    "event AdminChanged(address previousAdmin, address newAdmin)",
    "event BeaconUpgraded(address indexed beacon)",
    "event Initialized(uint8 version)",
    "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
    "event Paused(address account)",
    "event ScoreSchemaSet(bytes32 schema)",
    "event Unpaused(address account)",
    "event Upgraded(address indexed implementation)",
    "function _eas() view returns (address)",
    "function _gitcoinAttester() view returns (address)",
    "function addToAllowlist(address addr)",
    "function allowlist(address) view returns (bool)",
    "function attest(tuple(bytes32 uid, bytes32 schema, uint64 time, uint64 expirationTime, uint64 revocationTime, bytes32 refUID, address recipient, address attester, bool revocable, bytes data) attestation) payable returns (bool)",
    "function getCachedScore(address user) view returns (tuple(uint32 score, uint64 time, uint64 expirationTime))",
    "function getUserAttestation(address user, bytes32 schema) view returns (bytes32)",
    "function initialize(address eas, address gitcoinAttester)",
    "function isPayable() pure returns (bool)",
    "function multiAttest(tuple(bytes32 uid, bytes32 schema, uint64 time, uint64 expirationTime, uint64 revocationTime, bytes32 refUID, address recipient, address attester, bool revocable, bytes data)[] attestations, uint256[]) payable returns (bool)",
    "function multiRevoke(tuple(bytes32 uid, bytes32 schema, uint64 time, uint64 expirationTime, uint64 revocationTime, bytes32 refUID, address recipient, address attester, bool revocable, bytes data)[] attestations, uint256[]) payable returns (bool)",
    "function owner() view returns (address)",
    "function pause()",
    "function paused() view returns (bool)",
    "function proxiableUUID() view returns (bytes32)",
    "function removeFromAllowlist(address addr)",
    "function renounceOwnership()",
    "function revoke(tuple(bytes32 uid, bytes32 schema, uint64 time, uint64 expirationTime, uint64 revocationTime, bytes32 refUID, address recipient, address attester, bool revocable, bytes data) attestation) payable returns (bool)",
    "function scoreSchema() view returns (bytes32)",
    "function scores(address) view returns (uint32 score, uint64 time, uint64 expirationTime)",
    "function setScoreSchema(bytes32 _schema)",
    "function transferOwnership(address newOwner)",
    "function unpause()",
    "function upgradeTo(address newImplementation)",
    "function upgradeToAndCall(address newImplementation, bytes data) payable",
    "function userAttestations(address, bytes32) view returns (bytes32)"
  ],
  "0xaa37dc": [
    "error AccessDenied()",
    "error InsufficientValue()",
    "error InvalidAttester()",
    "error InvalidEAS()",
    "error NotAllowlisted()",
    "error NotPayable()",
    "event AdminChanged(address previousAdmin, address newAdmin)",
    "event BeaconUpgraded(address indexed beacon)",
    "event Initialized(uint8 version)",
    "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
    "event Paused(address account)",
    "event ScoreSchemaSet(bytes32 schema)",
    "event Unpaused(address account)",
    "event Upgraded(address indexed implementation)",
    "function _eas() view returns (address)",
    "function _gitcoinAttester() view returns (address)",
    "function addToAllowlist(address addr)",
    "function allowlist(address) view returns (bool)",
    "function attest((bytes32 uid, bytes32 schema, uint64 time, uint64 expirationTime, uint64 revocationTime, bytes32 refUID, address recipient, address attester, bool revocable, bytes data) attestation) payable returns (bool)",
    "function communityScoreAttestations(uint32, address) view returns (bytes32)",
    "function communityScores(uint32, address) view returns (uint32 score, uint64 time, uint64 expirationTime)",
    "function defaultCommunityId() view returns (uint32)",
    "function getCachedScore(address user) view returns ((uint32 score, uint64 time, uint64 expirationTime))",
    "function getCachedScore(uint32 communityId, address user) view returns ((uint32 score, uint64 time, uint64 expirationTime))",
    "function getUserAttestation(address user, bytes32 schema) view returns (bytes32)",
    "function initialize(address eas, address gitcoinAttester)",
    "function isPayable() pure returns (bool)",
    "function multiAttest((bytes32 uid, bytes32 schema, uint64 time, uint64 expirationTime, uint64 revocationTime, bytes32 refUID, address recipient, address attester, bool revocable, bytes data)[] attestations, uint256[]) payable returns (bool)",
    "function multiRevoke((bytes32 uid, bytes32 schema, uint64 time, uint64 expirationTime, uint64 revocationTime, bytes32 refUID, address recipient, address attester, bool revocable, bytes data)[] attestations, uint256[]) payable returns (bool)",
    "function owner() view returns (address)",
    "function pause()",
    "function paused() view returns (bool)",
    "function proxiableUUID() view returns (bytes32)",
    "function removeFromAllowlist(address addr)",
    "function renounceOwnership()",
    "function revoke((bytes32 uid, bytes32 schema, uint64 time, uint64 expirationTime, uint64 revocationTime, bytes32 refUID, address recipient, address attester, bool revocable, bytes data) attestation) payable returns (bool)",
    "function scoreSchema() view returns (bytes32)",
    "function scoreV2Schema() view returns (bytes32)",
    "function scores(address) view returns (uint32 score, uint64 time, uint64 expirationTime)",
    "function setDefaultCommunityId(uint32 communityId)",
    "function setScoreSchema(bytes32 _schema)",
    "function setScoreV2Schema(bytes32 _schema)",
    "function transferOwnership(address newOwner)",
    "function unpause()",
    "function upgradeTo(address newImplementation)",
    "function upgradeToAndCall(address newImplementation, bytes data) payable",
    "function userAttestations(address, bytes32) view returns (bytes32)"
  ],
  "0xa4b1": [
    "error AccessDenied()",
    "error InsufficientValue()",
    "error InvalidAttester()",
    "error InvalidEAS()",
    "error NotAllowlisted()",
    "error NotPayable()",
    "event AdminChanged(address previousAdmin, address newAdmin)",
    "event BeaconUpgraded(address indexed beacon)",
    "event Initialized(uint8 version)",
    "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
    "event Paused(address account)",
    "event ScoreSchemaSet(bytes32 schema)",
    "event Unpaused(address account)",
    "event Upgraded(address indexed implementation)",
    "function _eas() view returns (address)",
    "function _gitcoinAttester() view returns (address)",
    "function addToAllowlist(address addr)",
    "function allowlist(address) view returns (bool)",
    "function attest((bytes32 uid, bytes32 schema, uint64 time, uint64 expirationTime, uint64 revocationTime, bytes32 refUID, address recipient, address attester, bool revocable, bytes data) attestation) payable returns (bool)",
    "function communityScoreAttestations(uint32, address) view returns (bytes32)",
    "function communityScores(uint32, address) view returns (uint32 score, uint64 time, uint64 expirationTime)",
    "function defaultCommunityId() view returns (uint32)",
    "function getCachedScore(address user) view returns ((uint32 score, uint64 time, uint64 expirationTime))",
    "function getCachedScore(uint32 communityId, address user) view returns ((uint32 score, uint64 time, uint64 expirationTime))",
    "function getUserAttestation(address user, bytes32 schema) view returns (bytes32)",
    "function initialize(address eas, address gitcoinAttester)",
    "function isPayable() pure returns (bool)",
    "function multiAttest((bytes32 uid, bytes32 schema, uint64 time, uint64 expirationTime, uint64 revocationTime, bytes32 refUID, address recipient, address attester, bool revocable, bytes data)[] attestations, uint256[]) payable returns (bool)",
    "function multiRevoke((bytes32 uid, bytes32 schema, uint64 time, uint64 expirationTime, uint64 revocationTime, bytes32 refUID, address recipient, address attester, bool revocable, bytes data)[] attestations, uint256[]) payable returns (bool)",
    "function owner() view returns (address)",
    "function pause()",
    "function paused() view returns (bool)",
    "function proxiableUUID() view returns (bytes32)",
    "function removeFromAllowlist(address addr)",
    "function renounceOwnership()",
    "function revoke((bytes32 uid, bytes32 schema, uint64 time, uint64 expirationTime, uint64 revocationTime, bytes32 refUID, address recipient, address attester, bool revocable, bytes data) attestation) payable returns (bool)",
    "function scoreSchema() view returns (bytes32)",
    "function scoreV2Schema() view returns (bytes32)",
    "function scores(address) view returns (uint32 score, uint64 time, uint64 expirationTime)",
    "function setDefaultCommunityId(uint32 communityId)",
    "function setScoreSchema(bytes32 _schema)",
    "function setScoreV2Schema(bytes32 _schema)",
    "function transferOwnership(address newOwner)",
    "function unpause()",
    "function upgradeTo(address newImplementation)",
    "function upgradeToAndCall(address newImplementation, bytes data) payable",
    "function userAttestations(address, bytes32) view returns (bytes32)"
  ],
  "0x12c": [
    "error AccessDenied()",
    "error InsufficientValue()",
    "error InvalidAttester()",
    "error InvalidEAS()",
    "error NotAllowlisted()",
    "error NotPayable()",
    "event AdminChanged(address previousAdmin, address newAdmin)",
    "event BeaconUpgraded(address indexed beacon)",
    "event Initialized(uint8 version)",
    "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
    "event Paused(address account)",
    "event ScoreSchemaSet(bytes32 schema)",
    "event Unpaused(address account)",
    "event Upgraded(address indexed implementation)",
    "function _eas() view returns (address)",
    "function _gitcoinAttester() view returns (address)",
    "function addToAllowlist(address addr)",
    "function allowlist(address) view returns (bool)",
    "function attest((bytes32 uid, bytes32 schema, uint64 time, uint64 expirationTime, uint64 revocationTime, bytes32 refUID, address recipient, address attester, bool revocable, bytes data) attestation) payable returns (bool)",
    "function getCachedScore(address user) view returns ((uint32 score, uint64 time, uint64 expirationTime))",
    "function getUserAttestation(address user, bytes32 schema) view returns (bytes32)",
    "function initialize(address eas, address gitcoinAttester)",
    "function isPayable() pure returns (bool)",
    "function multiAttest((bytes32 uid, bytes32 schema, uint64 time, uint64 expirationTime, uint64 revocationTime, bytes32 refUID, address recipient, address attester, bool revocable, bytes data)[] attestations, uint256[]) payable returns (bool)",
    "function multiRevoke((bytes32 uid, bytes32 schema, uint64 time, uint64 expirationTime, uint64 revocationTime, bytes32 refUID, address recipient, address attester, bool revocable, bytes data)[] attestations, uint256[]) payable returns (bool)",
    "function owner() view returns (address)",
    "function pause()",
    "function paused() view returns (bool)",
    "function proxiableUUID() view returns (bytes32)",
    "function removeFromAllowlist(address addr)",
    "function renounceOwnership()",
    "function revoke((bytes32 uid, bytes32 schema, uint64 time, uint64 expirationTime, uint64 revocationTime, bytes32 refUID, address recipient, address attester, bool revocable, bytes data) attestation) payable returns (bool)",
    "function scoreSchema() view returns (bytes32)",
    "function scores(address) view returns (uint32 score, uint64 time, uint64 expirationTime)",
    "function setScoreSchema(bytes32 _schema)",
    "function transferOwnership(address newOwner)",
    "function unpause()",
    "function upgradeTo(address newImplementation)",
    "function upgradeToAndCall(address newImplementation, bytes data) payable",
    "function userAttestations(address, bytes32) view returns (bytes32)"
  ],
  "0x144": [
    "error AccessDenied()",
    "error InsufficientValue()",
    "error InvalidAttester()",
    "error InvalidEAS()",
    "error NotAllowlisted()",
    "error NotPayable()",
    "event AdminChanged(address previousAdmin, address newAdmin)",
    "event BeaconUpgraded(address indexed beacon)",
    "event Initialized(uint8 version)",
    "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
    "event Paused(address account)",
    "event ScoreSchemaSet(bytes32 schema)",
    "event Unpaused(address account)",
    "event Upgraded(address indexed implementation)",
    "function _eas() view returns (address)",
    "function _gitcoinAttester() view returns (address)",
    "function addToAllowlist(address addr)",
    "function allowlist(address) view returns (bool)",
    "function attest((bytes32 uid, bytes32 schema, uint64 time, uint64 expirationTime, uint64 revocationTime, bytes32 refUID, address recipient, address attester, bool revocable, bytes data) attestation) payable returns (bool)",
    "function getCachedScore(address user) view returns ((uint32 score, uint64 time, uint64 expirationTime))",
    "function getUserAttestation(address user, bytes32 schema) view returns (bytes32)",
    "function initialize(address eas, address gitcoinAttester)",
    "function isPayable() pure returns (bool)",
    "function multiAttest((bytes32 uid, bytes32 schema, uint64 time, uint64 expirationTime, uint64 revocationTime, bytes32 refUID, address recipient, address attester, bool revocable, bytes data)[] attestations, uint256[]) payable returns (bool)",
    "function multiRevoke((bytes32 uid, bytes32 schema, uint64 time, uint64 expirationTime, uint64 revocationTime, bytes32 refUID, address recipient, address attester, bool revocable, bytes data)[] attestations, uint256[]) payable returns (bool)",
    "function owner() view returns (address)",
    "function pause()",
    "function paused() view returns (bool)",
    "function proxiableUUID() view returns (bytes32)",
    "function removeFromAllowlist(address addr)",
    "function renounceOwnership()",
    "function revoke((bytes32 uid, bytes32 schema, uint64 time, uint64 expirationTime, uint64 revocationTime, bytes32 refUID, address recipient, address attester, bool revocable, bytes data) attestation) payable returns (bool)",
    "function scoreSchema() view returns (bytes32)",
    "function scores(address) view returns (uint32 score, uint64 time, uint64 expirationTime)",
    "function setScoreSchema(bytes32 _schema)",
    "function transferOwnership(address newOwner)",
    "function unpause()",
    "function upgradeTo(address newImplementation)",
    "function upgradeToAndCall(address newImplementation, bytes data) payable",
    "function userAttestations(address, bytes32) view returns (bytes32)"
  ],
  "0x8274f": [
    "error AccessDenied()",
    "error InsufficientValue()",
    "error InvalidAttester()",
    "error InvalidEAS()",
    "error NotAllowlisted()",
    "error NotPayable()",
    "event AdminChanged(address previousAdmin, address newAdmin)",
    "event BeaconUpgraded(address indexed beacon)",
    "event Initialized(uint8 version)",
    "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
    "event Paused(address account)",
    "event ScoreSchemaSet(bytes32 schema)",
    "event Unpaused(address account)",
    "event Upgraded(address indexed implementation)",
    "function _eas() view returns (address)",
    "function _gitcoinAttester() view returns (address)",
    "function addToAllowlist(address addr)",
    "function allowlist(address) view returns (bool)",
    "function attest((bytes32 uid, bytes32 schema, uint64 time, uint64 expirationTime, uint64 revocationTime, bytes32 refUID, address recipient, address attester, bool revocable, bytes data) attestation) payable returns (bool)",
    "function getCachedScore(address user) view returns ((uint32 score, uint64 time, uint64 expirationTime))",
    "function getUserAttestation(address user, bytes32 schema) view returns (bytes32)",
    "function initialize(address eas, address gitcoinAttester)",
    "function isPayable() pure returns (bool)",
    "function multiAttest((bytes32 uid, bytes32 schema, uint64 time, uint64 expirationTime, uint64 revocationTime, bytes32 refUID, address recipient, address attester, bool revocable, bytes data)[] attestations, uint256[]) payable returns (bool)",
    "function multiRevoke((bytes32 uid, bytes32 schema, uint64 time, uint64 expirationTime, uint64 revocationTime, bytes32 refUID, address recipient, address attester, bool revocable, bytes data)[] attestations, uint256[]) payable returns (bool)",
    "function owner() view returns (address)",
    "function pause()",
    "function paused() view returns (bool)",
    "function proxiableUUID() view returns (bytes32)",
    "function removeFromAllowlist(address addr)",
    "function renounceOwnership()",
    "function revoke((bytes32 uid, bytes32 schema, uint64 time, uint64 expirationTime, uint64 revocationTime, bytes32 refUID, address recipient, address attester, bool revocable, bytes data) attestation) payable returns (bool)",
    "function scoreSchema() view returns (bytes32)",
    "function scores(address) view returns (uint32 score, uint64 time, uint64 expirationTime)",
    "function setScoreSchema(bytes32 _schema)",
    "function transferOwnership(address newOwner)",
    "function unpause()",
    "function upgradeTo(address newImplementation)",
    "function upgradeToAndCall(address newImplementation, bytes data) payable",
    "function userAttestations(address, bytes32) view returns (bytes32)"
  ],
  "0x82750": [
    "error AccessDenied()",
    "error InsufficientValue()",
    "error InvalidAttester()",
    "error InvalidEAS()",
    "error NotAllowlisted()",
    "error NotPayable()",
    "event AdminChanged(address previousAdmin, address newAdmin)",
    "event BeaconUpgraded(address indexed beacon)",
    "event Initialized(uint8 version)",
    "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
    "event Paused(address account)",
    "event ScoreSchemaSet(bytes32 schema)",
    "event Unpaused(address account)",
    "event Upgraded(address indexed implementation)",
    "function _eas() view returns (address)",
    "function _gitcoinAttester() view returns (address)",
    "function addToAllowlist(address addr)",
    "function allowlist(address) view returns (bool)",
    "function attest((bytes32 uid, bytes32 schema, uint64 time, uint64 expirationTime, uint64 revocationTime, bytes32 refUID, address recipient, address attester, bool revocable, bytes data) attestation) payable returns (bool)",
    "function communityScoreAttestations(uint32, address) view returns (bytes32)",
    "function communityScores(uint32, address) view returns (uint32 score, uint64 time, uint64 expirationTime)",
    "function defaultCommunityId() view returns (uint32)",
    "function getCachedScore(address user) view returns ((uint32 score, uint64 time, uint64 expirationTime))",
    "function getCachedScore(uint32 communityId, address user) view returns ((uint32 score, uint64 time, uint64 expirationTime))",
    "function getUserAttestation(address user, bytes32 schema) view returns (bytes32)",
    "function initialize(address eas, address gitcoinAttester)",
    "function isPayable() pure returns (bool)",
    "function multiAttest((bytes32 uid, bytes32 schema, uint64 time, uint64 expirationTime, uint64 revocationTime, bytes32 refUID, address recipient, address attester, bool revocable, bytes data)[] attestations, uint256[]) payable returns (bool)",
    "function multiRevoke((bytes32 uid, bytes32 schema, uint64 time, uint64 expirationTime, uint64 revocationTime, bytes32 refUID, address recipient, address attester, bool revocable, bytes data)[] attestations, uint256[]) payable returns (bool)",
    "function owner() view returns (address)",
    "function pause()",
    "function paused() view returns (bool)",
    "function proxiableUUID() view returns (bytes32)",
    "function removeFromAllowlist(address addr)",
    "function renounceOwnership()",
    "function revoke((bytes32 uid, bytes32 schema, uint64 time, uint64 expirationTime, uint64 revocationTime, bytes32 refUID, address recipient, address attester, bool revocable, bytes data) attestation) payable returns (bool)",
    "function scoreSchema() view returns (bytes32)",
    "function scoreV2Schema() view returns (bytes32)",
    "function scores(address) view returns (uint32 score, uint64 time, uint64 expirationTime)",
    "function setDefaultCommunityId(uint32 communityId)",
    "function setScoreSchema(bytes32 _schema)",
    "function setScoreV2Schema(bytes32 _schema)",
    "function transferOwnership(address newOwner)",
    "function unpause()",
    "function upgradeTo(address newImplementation)",
    "function upgradeToAndCall(address newImplementation, bytes data) payable",
    "function userAttestations(address, bytes32) view returns (bytes32)"
  ],
  "0x2b03": [
    "error AccessDenied()",
    "error InsufficientValue()",
    "error InvalidAttester()",
    "error InvalidEAS()",
    "error NotAllowlisted()",
    "error NotPayable()",
    "event AdminChanged(address previousAdmin, address newAdmin)",
    "event BeaconUpgraded(address indexed beacon)",
    "event Initialized(uint8 version)",
    "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
    "event Paused(address account)",
    "event ScoreSchemaSet(bytes32 schema)",
    "event Unpaused(address account)",
    "event Upgraded(address indexed implementation)",
    "function _eas() view returns (address)",
    "function _gitcoinAttester() view returns (address)",
    "function addToAllowlist(address addr)",
    "function allowlist(address) view returns (bool)",
    "function attest((bytes32 uid, bytes32 schema, uint64 time, uint64 expirationTime, uint64 revocationTime, bytes32 refUID, address recipient, address attester, bool revocable, bytes data) attestation) payable returns (bool)",
    "function getCachedScore(address user) view returns ((uint32 score, uint64 time, uint64 expirationTime))",
    "function getUserAttestation(address user, bytes32 schema) view returns (bytes32)",
    "function initialize(address eas, address gitcoinAttester)",
    "function isPayable() pure returns (bool)",
    "function multiAttest((bytes32 uid, bytes32 schema, uint64 time, uint64 expirationTime, uint64 revocationTime, bytes32 refUID, address recipient, address attester, bool revocable, bytes data)[] attestations, uint256[]) payable returns (bool)",
    "function multiRevoke((bytes32 uid, bytes32 schema, uint64 time, uint64 expirationTime, uint64 revocationTime, bytes32 refUID, address recipient, address attester, bool revocable, bytes data)[] attestations, uint256[]) payable returns (bool)",
    "function owner() view returns (address)",
    "function pause()",
    "function paused() view returns (bool)",
    "function proxiableUUID() view returns (bytes32)",
    "function removeFromAllowlist(address addr)",
    "function renounceOwnership()",
    "function revoke((bytes32 uid, bytes32 schema, uint64 time, uint64 expirationTime, uint64 revocationTime, bytes32 refUID, address recipient, address attester, bool revocable, bytes data) attestation) payable returns (bool)",
    "function scoreSchema() view returns (bytes32)",
    "function scores(address) view returns (uint32 score, uint64 time, uint64 expirationTime)",
    "function setScoreSchema(bytes32 _schema)",
    "function transferOwnership(address newOwner)",
    "function unpause()",
    "function upgradeTo(address newImplementation)",
    "function upgradeToAndCall(address newImplementation, bytes data) payable",
    "function userAttestations(address, bytes32) view returns (bytes32)"
  ],
  "0x168": [
    "error AccessDenied()",
    "error InsufficientValue()",
    "error InvalidAttester()",
    "error InvalidEAS()",
    "error NotAllowlisted()",
    "error NotPayable()",
    "event AdminChanged(address previousAdmin, address newAdmin)",
    "event BeaconUpgraded(address indexed beacon)",
    "event Initialized(uint8 version)",
    "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
    "event Paused(address account)",
    "event ScoreSchemaSet(bytes32 schema)",
    "event Unpaused(address account)",
    "event Upgraded(address indexed implementation)",
    "function _eas() view returns (address)",
    "function _gitcoinAttester() view returns (address)",
    "function addToAllowlist(address addr)",
    "function allowlist(address) view returns (bool)",
    "function attest((bytes32 uid, bytes32 schema, uint64 time, uint64 expirationTime, uint64 revocationTime, bytes32 refUID, address recipient, address attester, bool revocable, bytes data) attestation) payable returns (bool)",
    "function communityScoreAttestations(uint32, address) view returns (bytes32)",
    "function communityScores(uint32, address) view returns (uint32 score, uint64 time, uint64 expirationTime)",
    "function defaultCommunityId() view returns (uint32)",
    "function getCachedScore(address user) view returns ((uint32 score, uint64 time, uint64 expirationTime))",
    "function getCachedScore(uint32 communityId, address user) view returns ((uint32 score, uint64 time, uint64 expirationTime))",
    "function getUserAttestation(address user, bytes32 schema) view returns (bytes32)",
    "function initialize(address eas, address gitcoinAttester)",
    "function isPayable() pure returns (bool)",
    "function multiAttest((bytes32 uid, bytes32 schema, uint64 time, uint64 expirationTime, uint64 revocationTime, bytes32 refUID, address recipient, address attester, bool revocable, bytes data)[] attestations, uint256[]) payable returns (bool)",
    "function multiRevoke((bytes32 uid, bytes32 schema, uint64 time, uint64 expirationTime, uint64 revocationTime, bytes32 refUID, address recipient, address attester, bool revocable, bytes data)[] attestations, uint256[]) payable returns (bool)",
    "function owner() view returns (address)",
    "function pause()",
    "function paused() view returns (bool)",
    "function proxiableUUID() view returns (bytes32)",
    "function removeFromAllowlist(address addr)",
    "function renounceOwnership()",
    "function revoke((bytes32 uid, bytes32 schema, uint64 time, uint64 expirationTime, uint64 revocationTime, bytes32 refUID, address recipient, address attester, bool revocable, bytes data) attestation) payable returns (bool)",
    "function scoreSchema() view returns (bytes32)",
    "function scoreV2Schema() view returns (bytes32)",
    "function scores(address) view returns (uint32 score, uint64 time, uint64 expirationTime)",
    "function setDefaultCommunityId(uint32 communityId)",
    "function setScoreSchema(bytes32 _schema)",
    "function setScoreV2Schema(bytes32 _schema)",
    "function transferOwnership(address newOwner)",
    "function unpause()",
    "function upgradeTo(address newImplementation)",
    "function upgradeToAndCall(address newImplementation, bytes data) payable",
    "function userAttestations(address, bytes32) view returns (bytes32)"
  ],
  "0x2105": [
    "error AccessDenied()",
    "error InsufficientValue()",
    "error InvalidAttester()",
    "error InvalidEAS()",
    "error NotAllowlisted()",
    "error NotPayable()",
    "event AdminChanged(address previousAdmin, address newAdmin)",
    "event BeaconUpgraded(address indexed beacon)",
    "event Initialized(uint8 version)",
    "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
    "event Paused(address account)",
    "event ScoreSchemaSet(bytes32 schema)",
    "event Unpaused(address account)",
    "event Upgraded(address indexed implementation)",
    "function _eas() view returns (address)",
    "function _gitcoinAttester() view returns (address)",
    "function addToAllowlist(address addr)",
    "function allowlist(address) view returns (bool)",
    "function attest((bytes32 uid, bytes32 schema, uint64 time, uint64 expirationTime, uint64 revocationTime, bytes32 refUID, address recipient, address attester, bool revocable, bytes data) attestation) payable returns (bool)",
    "function communityScoreAttestations(uint32, address) view returns (bytes32)",
    "function communityScores(uint32, address) view returns (uint32 score, uint64 time, uint64 expirationTime)",
    "function defaultCommunityId() view returns (uint32)",
    "function getCachedScore(address user) view returns ((uint32 score, uint64 time, uint64 expirationTime))",
    "function getCachedScore(uint32 communityId, address user) view returns ((uint32 score, uint64 time, uint64 expirationTime))",
    "function getUserAttestation(address user, bytes32 schema) view returns (bytes32)",
    "function initialize(address eas, address gitcoinAttester)",
    "function isPayable() pure returns (bool)",
    "function multiAttest((bytes32 uid, bytes32 schema, uint64 time, uint64 expirationTime, uint64 revocationTime, bytes32 refUID, address recipient, address attester, bool revocable, bytes data)[] attestations, uint256[]) payable returns (bool)",
    "function multiRevoke((bytes32 uid, bytes32 schema, uint64 time, uint64 expirationTime, uint64 revocationTime, bytes32 refUID, address recipient, address attester, bool revocable, bytes data)[] attestations, uint256[]) payable returns (bool)",
    "function owner() view returns (address)",
    "function pause()",
    "function paused() view returns (bool)",
    "function proxiableUUID() view returns (bytes32)",
    "function removeFromAllowlist(address addr)",
    "function renounceOwnership()",
    "function revoke((bytes32 uid, bytes32 schema, uint64 time, uint64 expirationTime, uint64 revocationTime, bytes32 refUID, address recipient, address attester, bool revocable, bytes data) attestation) payable returns (bool)",
    "function scoreSchema() view returns (bytes32)",
    "function scoreV2Schema() view returns (bytes32)",
    "function scores(address) view returns (uint32 score, uint64 time, uint64 expirationTime)",
    "function setDefaultCommunityId(uint32 communityId)",
    "function setScoreSchema(bytes32 _schema)",
    "function setScoreV2Schema(bytes32 _schema)",
    "function transferOwnership(address newOwner)",
    "function unpause()",
    "function upgradeTo(address newImplementation)",
    "function upgradeToAndCall(address newImplementation, bytes data) payable",
    "function userAttestations(address, bytes32) view returns (bytes32)"
  ]
}